name: Deploy Telegram Bot

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'  # Версия .NET SDK

    - name: Restore dependencies
      run: |
        cd src/z_planner_bot
        dotnet restore z_planner_bot.csproj

    - name: Build project
      run: |
        cd src/z_planner_bot
        dotnet build z_planner_bot.csproj

    - name: Publish project
      run: |
        cd src/z_planner_bot
        dotnet publish z_planner_bot.csproj -c Release -o ./out

    - name: Build Docker image
      run: |
        docker build -t z_planner_bot -f Dockerfile .

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to DockerHub
      run: |
        docker tag z_planner_bot ${{ secrets.DOCKER_USERNAME }}/z_planner_bot:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/z_planner_bot:latest

    - name: SSH to server and restart Docker container
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          docker stop z_planner_bot
          docker rm z_planner_bot
          docker pull ${{ secrets.DOCKER_USERNAME }}/z_planner_bot:latest
          docker run -d --restart unless-stopped --name z_planner_bot ${{ secrets.DOCKER_USERNAME }}/z_planner_bot:latest